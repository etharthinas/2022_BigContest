{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "200ee64b",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-1-5f6e95137c6c>, line 5)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"<ipython-input-1-5f6e95137c6c>\"\u001b[1;36m, line \u001b[1;32m5\u001b[0m\n\u001b[1;33m    //log data 정렬 및 인덱스 초기화\u001b[0m\n\u001b[1;37m    ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "log=pd.read_csv(\"log_data.csv\")\n",
    "sor=log.sort_values(['user_id','timestamp'])\n",
    "sor=sor.reset_index()\n",
    "/*log data 정렬 및 인덱스 초기화\n",
    "\n",
    "a=[1]\n",
    "cnt=1\n",
    "sess=1\n",
    "while cnt<17843993:\n",
    "    if sor.at[cnt,'user_id']!=sor.at[cnt-1,'user_id'] :\n",
    "        sess=1\n",
    "    elif sor.at[cnt,'event']=='OpenApp':\n",
    "        sess+=1\n",
    "    elif sor.at[cnt,'date_cd']!=sor.at[cnt-1,'date_cd'] :\n",
    "        sess+=1\n",
    "    cnt+=1\n",
    "    a.append(sess)\n",
    "sor['sessionnum']=a\n",
    "//sessionnum이라는 user 별 몇번째 session인지 열 추가\n",
    "sor['getcreditinfo']=sor['event']=='GetCreditInfo'\n",
    "sor['UsePrepayCalc']=sor['event']=='UsePrepayCalc'\n",
    "sor['UseDSRCalc']=sor['event']=='UseDSRCalc'\n",
    "sor['useloanmanage']=sor['event']=='UseLoanManage'\n",
    "sor['CompleteIDCertification']=sor['event']=='CompleteIDCertification'\n",
    "happy=sor.groupby(['user_id','sessionnum']).sum()\n",
    "happy=happy[['getcreditinfo','useloanmanage','UsePrepayCalc','UseDSRCalc','CompleteIDCertification']]\n",
    "happy['starttime']=sor.groupby(['user_id','sessionnum']).first()['timestamp']\n",
    "happy['endtime']=sor.groupby(['user_id','sessionnum']).last()['timestamp']\n",
    "happy.starttime=pd.to_datetime(happy.starttime)\n",
    "happy.endtime=pd.to_datetime(happy.endtime)\n",
    "happy['sessionlength']=happy['endtime']-happy['starttime']\n",
    "happy['getcreditinfo']=happy['getcreditinfo']!=0\n",
    "happy['useloanmanage']=happy['useloanmanage']!=0\n",
    "happy['UsePrepayCalc']=happy['UsePrepayCalc']!=0\n",
    "happy['UseDSRCalc']=happy['UseDSRCalc']!=0\n",
    "happy['CompleteIDCertification']=happy['CompleteIDCertification']!=0\n",
    "//groupby를 통해 session에서 각 event를 했는지 여부와, 시작&끝 시간, 소요시간 열 생성\n",
    "happy.to_csv(\"session.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "603c6aca",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
